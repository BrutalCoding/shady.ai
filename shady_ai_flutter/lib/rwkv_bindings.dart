// ignore_for_file: deprecated_member_use

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

import 'package:ffi/ffi.dart';

/// Bindings to rwkv.cpp
class RWKV {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RWKV(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  RWKV.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  ffi.Pointer<rwkv_context> rwkv_init_from_file(
    ffi.Pointer<Utf8> model_file_path,
    int n_threads,
  ) {
    return _rwkv_init_from_file(
      model_file_path,
      n_threads,
    );
  }

  late final _rwkv_init_from_filePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<rwkv_context> Function(
              ffi.Pointer<Utf8>, ffi.Uint32)>>('rwkv_init_from_file');
  late final _rwkv_init_from_file = _rwkv_init_from_filePtr
      .asFunction<ffi.Pointer<rwkv_context> Function(ffi.Pointer<Utf8>, int)>();

  bool rwkv_eval(
    ffi.Pointer<rwkv_context> ctx,
    int token,
    ffi.Pointer<ffi.Float> state_in,
    ffi.Pointer<ffi.Float> state_out,
    ffi.Pointer<ffi.Float> logits_out,
  ) {
    return _rwkv_eval(
      ctx,
      token,
      state_in,
      state_out,
      logits_out,
    );
  }

  late final _rwkv_evalPtr = _lookup<
      ffi.NativeFunction<
          ffi.Bool Function(
              ffi.Pointer<rwkv_context>,
              ffi.Int32,
              ffi.Pointer<ffi.Float>,
              ffi.Pointer<ffi.Float>,
              ffi.Pointer<ffi.Float>)>>('rwkv_eval');
  late final _rwkv_eval = _rwkv_evalPtr.asFunction<
      bool Function(ffi.Pointer<rwkv_context>, int, ffi.Pointer<ffi.Float>,
          ffi.Pointer<ffi.Float>, ffi.Pointer<ffi.Float>)>();

  int rwkv_get_state_buffer_element_count(
    ffi.Pointer<rwkv_context> ctx,
  ) {
    return _rwkv_get_state_buffer_element_count(
      ctx,
    );
  }

  late final _rwkv_get_state_buffer_element_countPtr = _lookup<
          ffi.NativeFunction<ffi.Uint32 Function(ffi.Pointer<rwkv_context>)>>(
      'rwkv_get_state_buffer_element_count');
  late final _rwkv_get_state_buffer_element_count =
      _rwkv_get_state_buffer_element_countPtr
          .asFunction<int Function(ffi.Pointer<rwkv_context>)>();

  int rwkv_get_logits_buffer_element_count(
    ffi.Pointer<rwkv_context> ctx,
  ) {
    return _rwkv_get_logits_buffer_element_count(
      ctx,
    );
  }

  late final _rwkv_get_logits_buffer_element_countPtr = _lookup<
          ffi.NativeFunction<ffi.Uint32 Function(ffi.Pointer<rwkv_context>)>>(
      'rwkv_get_logits_buffer_element_count');
  late final _rwkv_get_logits_buffer_element_count =
      _rwkv_get_logits_buffer_element_countPtr
          .asFunction<int Function(ffi.Pointer<rwkv_context>)>();

  void rwkv_free(
    ffi.Pointer<rwkv_context> ctx,
  ) {
    return _rwkv_free(
      ctx,
    );
  }

  late final _rwkv_freePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<rwkv_context>)>>(
          'rwkv_free');
  late final _rwkv_free =
      _rwkv_freePtr.asFunction<void Function(ffi.Pointer<rwkv_context>)>();

  bool rwkv_quantize_model_file(
    ffi.Pointer<ffi.Char> model_file_path_in,
    ffi.Pointer<ffi.Char> model_file_path_out,
    int q_type,
  ) {
    return _rwkv_quantize_model_file(
      model_file_path_in,
      model_file_path_out,
      q_type,
    );
  }

  late final _rwkv_quantize_model_filePtr = _lookup<
      ffi.NativeFunction<
          ffi.Bool Function(ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>,
              ffi.Uint32)>>('rwkv_quantize_model_file');
  late final _rwkv_quantize_model_file =
      _rwkv_quantize_model_filePtr.asFunction<
          bool Function(ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>, int)>();

  ffi.Pointer<ffi.Char> rwkv_get_system_info_string() {
    return _rwkv_get_system_info_string();
  }

  late final _rwkv_get_system_info_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>(
          'rwkv_get_system_info_string');
  late final _rwkv_get_system_info_string = _rwkv_get_system_info_stringPtr
      .asFunction<ffi.Pointer<ffi.Char> Function()>();
}

class rwkv_context extends ffi.Opaque {}

const int NULL = 0;

const int USER_ADDR_NULL = 0;

const int INT8_MAX = 127;

const int INT16_MAX = 32767;

const int INT32_MAX = 2147483647;

const int INT64_MAX = 9223372036854775807;

const int INT8_MIN = -128;

const int INT16_MIN = -32768;

const int INT32_MIN = -2147483648;

const int INT64_MIN = -9223372036854775808;

const int UINT8_MAX = 255;

const int UINT16_MAX = 65535;

const int UINT32_MAX = 4294967295;

const int UINT64_MAX = -1;

const int INT_LEAST8_MIN = -128;

const int INT_LEAST16_MIN = -32768;

const int INT_LEAST32_MIN = -2147483648;

const int INT_LEAST64_MIN = -9223372036854775808;

const int INT_LEAST8_MAX = 127;

const int INT_LEAST16_MAX = 32767;

const int INT_LEAST32_MAX = 2147483647;

const int INT_LEAST64_MAX = 9223372036854775807;

const int UINT_LEAST8_MAX = 255;

const int UINT_LEAST16_MAX = 65535;

const int UINT_LEAST32_MAX = 4294967295;

const int UINT_LEAST64_MAX = -1;

const int INT_FAST8_MIN = -128;

const int INT_FAST16_MIN = -32768;

const int INT_FAST32_MIN = -2147483648;

const int INT_FAST64_MIN = -9223372036854775808;

const int INT_FAST8_MAX = 127;

const int INT_FAST16_MAX = 32767;

const int INT_FAST32_MAX = 2147483647;

const int INT_FAST64_MAX = 9223372036854775807;

const int UINT_FAST8_MAX = 255;

const int UINT_FAST16_MAX = 65535;

const int UINT_FAST32_MAX = 4294967295;

const int UINT_FAST64_MAX = -1;

const int INTPTR_MAX = 9223372036854775807;

const int INTPTR_MIN = -9223372036854775808;

const int UINTPTR_MAX = -1;

const int INTMAX_MAX = 9223372036854775807;

const int UINTMAX_MAX = -1;

const int INTMAX_MIN = -9223372036854775808;

const int PTRDIFF_MIN = -9223372036854775808;

const int PTRDIFF_MAX = 9223372036854775807;

const int SIZE_MAX = -1;

const int RSIZE_MAX = 9223372036854775807;

const int WCHAR_MAX = 2147483647;

const int WCHAR_MIN = -2147483648;

const int WINT_MIN = -2147483648;

const int WINT_MAX = 2147483647;

const int SIG_ATOMIC_MIN = -2147483648;

const int SIG_ATOMIC_MAX = 2147483647;

const int true1 = 1;

const int false1 = 0;

const int RWKV_FILE_MAGIC = 1734831462;

const int RWKV_FILE_VERSION = 100;
